<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlTreeView.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlTreeView.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADS
        CAAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDNIAAXwBdQFzAU4CSwFUAU8BTQFUAU8BTQFUAU8BTQFWAVEBTQFTAVABTAFS
        AU8BSwFSAU8BTAFSAU8BSwFRAU4BSwFUAU4BRkIAAbcBogGTAWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1
        AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1OQAB2QHPAcgD/wH7Af0B/wH7Af0D/wH2
        Av8B9gL/AfYB/wH5AewB/wHwAeEB/wHqAdUB/wHqAdIBVAFOAUYSAAGUAZMBlANsA6wnAAG3AaIBkwP/
        AbcBogGTAbcBogGTAbcBogGTAbcBogGTAbcBogGTAbcBogGTAbcBogGTAbcBogGTAWMBSQE1OQAB0gHI
        AcED/wHEAa8BogHEAa8BogH/AfsB+QHEAa8BogHEAa8BogHEAa8BogHEAa8BogHEAa8BogH9Ad4BywFU
        AU4BRhIAAZoBmQGaA+IDHQOuAwAD9x4AAbcBogGTBv8B/AH6AfkB9wHxAe4B8QHnAeEB7AHdAdUB5gHT
        AckB4QHKAb0BtwGiAZMBYwFJATU5AAHSAcgBwQP/AfsB/QH/AfsB/QL/Af4B/AH9AfoB+AH7AfQB7wH7
        Ae4B5gH6AekB3gH4AeIB0gH/AeIB0AFUAU4BRhgAA5sDGAMAA0oBUwFSAVMDyQMwARQBEwEUATgCNg8A
        AbcBogGTBv8D/gH6AfcC9QHtAekB7wHjAdwB6gHZAdEB5AHPAcQBtwGiAZMBYwFJATU5AAHTAckBwgP/
        AcQBrwGiAcQBrwGiAv8B/gHEAa8BogHEAa8BogHEAa8BogHEAa8BogHEAa8BogH/AeUB1gFUAU4BRhgA
        A84BAgEBAQIDswYAAX4BfQF+AQIBAQECA4ID9w8AAbcBogGTCf8B/QH8AfsB+AHzAfAB8gHpAeMB7QHf
        AdgB5wHVAcsBtwGiAZMBYwFJATU5AAHRAccBwAP/AfsB/QH/AfsB/QT/Av4B/QH+AfsB+AH9AfYB8gH8
        AfAB6AH8AfAB6AH/AekB3AFUAU4BRhgAA/gBUAFOAVADaAMAA/UBsQGwAbEBJAEjASQDJhIAAboBpQGW
        DP8B+wH4AfcB9gHvAesB8AHlAd8B6wHbAdMBtwGiAZMBYwFJATU5AAHRAcgBwQP/AfsB/QH/AfsB/Qf/
        Av4B/AGwAa0BrAFBAVwBcgHjAdkB0wH/Ae0B4wFUAU4BRhsAA30DJwMAAaABngGdAZ8CngPIA8IDOwNj
        DAABvgGpAZoM/wH+Af0B/AH5AfUB8gH0AesB5gHuAeEB2gG3AaIBkwFjAUkBNTkAAdEByAHBA/8B4gLp
        AV4BdQGEAd8B5AHlA/8BwgHKAc4BSgFhAXABLgGpAdYBCwEQARsBXQFcAWABpAGdAZYGAAHBAdEBxAEc
        AWYBKQ8AA5UBAgEBAQID/AMAA/gD7gMAA/cD7QwAAcMBrgGeD/8B/AH6AfkB9wHxAe4B8QHnAeEBtwGi
        AZMBYwFJATU5AAHfAZ0BfQHxAcoBtwGPAaQBrAGGAdMB5QFLAWEBcAGnAZIBiQFKAWEBcAFhAcEB3gFX
        AU0BWQEfAdAB/wEVAScBMwEQAQcBCgECASEBLgFPAVYBZQFZAXgBWwEYAYwBMg8AA8IBGAEXARgDsx4A
        AcgBsgGjD/8D/gH6AfcC9QHtAekBtwGiAZMBYwFJATU5AAHfAZ0BfQH/AcUBpAHlAckBuQGPAaQBrAGD
        AeEB9gFLAWEBcAF6Ac0B4gFSAWABZwFoAe0B/wFBAT0BUAEyAbIB3wEdAZkByAEVAZMBxAEUAWIBjgFA
        AWYBUQEpAZcBPwwAAq8BrgGxAa8BrgGBAX8BfgEOAQsBCgEXARUBFBsAAcwBtgGnEv8B/QH8AfsBtwGi
        AZMBtwGiAZMBZAFKATY5AAHfAZ0BfQHfAZ0BfQHfAZ0BfQHaAboBqgGPAaQBrAF/AeMB+QFTAYQBlQFo
        Ae0B/wEwAToBTwFpAdsB9gFYAdIB8wFAAcMB7QExAbsB6gERAagB7AFQAZABjAEyAZ4BQRIAAaEBoAGh
        AUQBQwFEHgAB0QG7AasS/wG3AaIBkwFkAUoBNgFkAUoBNgFkAUoBNkUAAfMC9AFmAXgBiwFoAe0B/wFY
        AZgBrgFuAesB/wFyAeEB+QFqAd0B9wFWAc8B8gFLAccB7QEiAboB+gFfAaIBpgFBAawBUxIAA9IBZAFj
        AWQD9wFWAlUBiAKGFQAB1QG/Aa8S/wG5AaQBlQHUAcUBugFkAUoBNgHkAd0B2UUAAc4B0QHXAcIB6AHy
        AWwBewGLAW4B6wH/AW4B6wH/AW4B6wH/AXIB4gH6AWcB1wH0AVQBvQHcAVEBcgGLAWkBnAGJAYUBzAGF
        FQABugG5AboBeAJ1AR8CHAFxAnAVAAHYAcIBshL/AcABqwGcAWQBSgE2AeQB3gHZRQAD/gGrAbMBvQGd
        AbwBxwHqAesB7AGBAaYBtQGAAZcBowGAAZYBoAF6AY8BmQFzAYUBkwFdAXIBgQHVAdoB3AG+Ad0BxAGL
        AcgBlRgAA/gD7RgAAdgBwgGyAdgBwgGyAdgBwgGyAdgBwgGyAdgBwgGyAdQBvgGuAc8BuQGpAckBswGk
        AeQB3gHZ/wABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEABv8DAAEPAv8BwAEH
        AwABDwHHAf8BwAEHAwABDwHCAf8BwAEHAwABDwHyAQcBwAEHAwABDwHxAYcBwAEHAwABDwHxAQ8BwAEH
        AwABDwH5AQMBwAEHAwABDAH4AZMBwAEHBAAB+AH/AcABBwQAAfABfwHAAQcEAAH8Af8BwAEHAgAB8AEA
        AfwBHwHAAQcCAAHwAQAB/gEfAcABDwIAAeABAAH/AT8BwAEfAgAG/wIACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
</root>